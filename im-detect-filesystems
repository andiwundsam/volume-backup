#!/usr/bin/perl -w
use strict;

sub trim($)
{
	my $string = shift;
	$string =~ s/^\s+//;
	$string =~ s/\s+$//;
	return $string;
}



my $dev=$ARGV[0];
unless ($dev) {
   print STDERR "im-detect-filesystems - detect hdd filesystems using parted\n";
   print STDERR "Call syntax: $0 <device>\n\n";
   exit(200);
}

#demo parted output
my $parted_demo2=<<END;

Disk /dev/mapper/vg_system-lv_xen--test: 5369MB
Sector size (logical/physical): 512B/512B
Partition Table: loop

Number  Start   End     Size    File system  Flags
 1      0.00kB  5369MB  5369MB  ext3
END

my $parted_output=<<END;
Disk /dev/sda: 320GB
Sector size (logical/physical): 512B/512B
Partition Table: msdos

Number  Start   End     Size    Type      File system  Flags
 1      32.3kB  8201MB  8201MB  primary   xfs               
 2      8201MB  16.2GB  8003MB  primary   ext3              
 3      16.2GB  18.2GB  1999MB  primary   linux-swap        
 4      18.2GB  20.2GB  1999MB  extended                    
 5      18.2GB  20.2GB  1999MB  logical   xfs               
END

my $status="PREAMBLE";
my ($num_len, $gap_len, $fs_len);
open(F, "export LANG=C && parted --script $dev print |")
	or die "Could not execute parted: $!";

while(my $line = <F>) {
	# print "Line: $line\n";
	if($status eq "PREAMBLE" ) {
		if($line =~ /^(\s*Number\s*)(.*)(File system\s*)/i) {
		       $num_len=length($1);
		       $gap_len = length($2);
		       $fs_len = length($3);
		       $status = "CONTENT";
		}
	} elsif ($status eq "CONTENT" ) {
		if(length($line) < $num_len + $gap_len) {
			next;
		}
		my $num = trim(substr($line, 0, $num_len));
		my $fs = trim(substr($line, $num_len + $gap_len, $fs_len));

		if ($num eq "") {
			last;
		}
		if ($fs eq "") {
			next;
		}
		print "$num $fs\n";
	}

}
